description "ChatRoom Service Demon (node.js)"
author "Edinson Salas <edinsonsalas@gmail.com>"

env LOG_FILE=/var/log/node/chatroom_service.log
env APP_DIR=/opt/chatroom/
env APP=app.js
env PID_NAME=chatroom_service.pid
env USER=www-data
env GROUP=www-data
env POST_START_MESSAGE_TO_LOG="ChatRoom Service is running now!"
env NODE_BIN=/usr/bin/node
env PID_PATH=/var/opt/node/run
env SERVER_ENV="production"

######################################################
#   Creating and registering service on the system   #
######################################################

#Nuestro proceso espera hasta que el sistema este cargado
start on runlevel [2345]
#Y se detiene cuando el sistema se apague
stop on runlevel [016]

#Levanta el proceso automáticamente si se muere:
respawn
#limitamos el "respawn" a 99 veces con un timeout de 5s para que no intente levantar el proceso infinitamente.
respawn limit 99 5

pre-start script
    #Necesitamos asegurarnos que el path del pid exista antes de arrancar el proceso.
    mkdir -p $PID_PATH
    mkdir -p /var/log/node
end script

script
	#Seteamos NODE_ENV para que nuestra app se ejecute en modo production, development, test, etc.
	export NODE_ENV=$SERVER_ENV

	#El siguiente comando es el que realmente arranca el proceso:
	#Utiliza el usuario y grupo www-data (--chuid)
	#Asigna un pid y lo crea si no existe (--make-pidfile y --pidfile)
	#Cambia el directorio de ejecución a donde esté nuestra app de node (--chdir)
	#Ejecuta la app (--exec)
	#Envía cualquier output que genere nuestra app al log (>> $LOG_FILE 2>&1)

    exec start-stop-daemon --start --chuid $USER:$GROUP --make-pidfile --pidfile $PID_PATH/$PID_NAME --chdir $APP_DIR --exec $NODE_BIN -- $APP >> $LOG_FILE 2>&1

end script

post-start script
	echo $POST_START_MESSAGE_TO_LOG >> $LOG_FILE
end script
